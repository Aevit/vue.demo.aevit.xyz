{"version":3,"names":[],"mappings":"","sources":["hello.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar Vue // late bind\nvar map = window.__VUE_HOT_MAP__ = Object.create(null)\nvar installed = false\nvar isBrowserify = false\n\nexports.install = function (vue, browserify) {\n  if (installed) return\n  installed = true\n\n  Vue = vue\n  isBrowserify = browserify\n\n  exports.compatible = Number(Vue.version.split('.')[0]) >= 2\n  if (!exports.compatible) {\n    console.warn(\n      '[HMR] You are using a version of vue-hot-reload-api that is ' +\n      'only compatible with Vue.js core ^2.0.0.'\n    )\n    return\n  }\n}\n\n/**\n * Create a record for a hot module, which keeps track of its constructor\n * and instances\n *\n * @param {String} id\n * @param {Object} options\n */\n\nexports.createRecord = function (id, options) {\n  var Ctor = null\n  if (typeof options === 'function') {\n    Ctor = options\n    options = Ctor.options\n  }\n  makeOptionsHot(id, options)\n  map[id] = {\n    Ctor: Vue.extend(options),\n    instances: []\n  }\n}\n\n/**\n * Make a Component options object hot.\n *\n * @param {String} id\n * @param {Object} options\n */\n\nfunction makeOptionsHot (id, options) {\n  injectHook(options, 'init', function () {\n    map[id].instances.push(this)\n  })\n  injectHook(options, 'beforeDestroy', function () {\n    var instances = map[id].instances\n    instances.splice(instances.indexOf(this), 1)\n  })\n}\n\n/**\n * Inject a hook to a hot reloadable component so that\n * we can keep track of it.\n *\n * @param {Object} options\n * @param {String} name\n * @param {Function} hook\n */\n\nfunction injectHook (options, name, hook) {\n  var existing = options[name]\n  options[name] = existing\n    ? Array.isArray(existing)\n      ? existing.concat(hook)\n      : [existing, hook]\n    : [hook]\n}\n\nfunction tryWrap (fn) {\n  return function (id, arg) {\n    try { fn(id, arg) } catch (e) {\n      console.error(e)\n      console.warn('Something went wrong during Vue component hot-reload. Full reload required.')\n    }\n  }\n}\n\nexports.rerender = tryWrap(function (id, fns) {\n  var record = map[id]\n  record.Ctor.options.render = fns.render\n  record.Ctor.options.staticRenderFns = fns.staticRenderFns\n  record.instances.slice().forEach(function (instance) {\n    instance.$options.render = fns.render\n    instance.$options.staticRenderFns = fns.staticRenderFns\n    instance._staticTrees = [] // reset static trees\n    instance.$forceUpdate()\n    // force update on direct children for potential slot content update\n    instance.$children.forEach(function (child) {\n      if (Object.keys(child.$slots).length > 0) {\n        child.$forceUpdate()\n      }\n    })\n  })\n})\n\nexports.reload = tryWrap(function (id, options) {\n  makeOptionsHot(id, options)\n  var record = map[id]\n  record.Ctor.extendOptions = options\n  var newCtor = Vue.extend(options)\n  record.Ctor.options = newCtor.options\n  record.Ctor.cid = newCtor.cid\n  if (newCtor.release) {\n    // temporary global mixin strategy used in < 2.0.0-alpha.6\n    newCtor.release()\n  }\n  record.instances.slice().forEach(function (instance) {\n    if (instance.$parent) {\n      instance.$parent.$forceUpdate()\n    } else {\n      console.warn('Root or manually mounted instance modified. Full reload required.')\n    }\n  })\n})\n\n},{}],2:[function(require,module,exports){\nvar inserted = exports.cache = {}\n\nexports.insert = function (css) {\n  if (inserted[css]) return\n  inserted[css] = true\n\n  var elem = document.createElement('style')\n  elem.setAttribute('type', 'text/css')\n\n  if ('textContent' in elem) {\n    elem.textContent = css\n  } else {\n    elem.styleSheet.cssText = css\n  }\n\n  document.getElementsByTagName('head')[0].appendChild(elem)\n  return elem\n}\n\n},{}],3:[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar _vue = (typeof window !== \"undefined\" ? window['Vue'] : typeof global !== \"undefined\" ? global['Vue'] : null);\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _Hello = require('../views/Hello.vue');\n\nvar _Hello2 = _interopRequireDefault(_Hello);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_vue2.default.config.debug = true;\n\nPromise.all([new Promise(function (resolve) {\n  if (window.addEventListener) {\n    window.addEventListener('DOMContentLoaded', resolve);\n  } else {\n    window.attachEvent('onload', resolve);\n  }\n})]).then(function (event) {\n  new _vue2.default(_Hello2.default);\n});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../views/Hello.vue\":4}],4:[function(require,module,exports){\n(function (global){\nvar __vueify_insert__ = require(\"vueify/lib/insert-css\")\nvar __vueify_style__ = __vueify_insert__.insert(\"\\n\")\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = {\n    el: function el() {\n        return '#app';\n    },\n    data: function data() {\n        return {\n            message: 'Hello Vue.js!'\n        };\n    }\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n<p>{{ message }}</p>\\n<input v-model=\\\"message\\\">\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install((typeof window !== \"undefined\" ? window['Vue'] : typeof global !== \"undefined\" ? global['Vue'] : null), true)\n  if (!hotAPI.compatible) return\n  module.hot.dispose(function () {\n    __vueify_insert__.cache[\"\\n\"] = false\n    document.head.removeChild(__vueify_style__)\n  })\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"_v-24897619\", module.exports)\n  } else {\n    hotAPI.update(\"_v-24897619\", module.exports, (typeof module.exports === \"function\" ? module.exports.options : module.exports).template)\n  }\n})()}\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"vue-hot-reload-api\":1,\"vueify/lib/insert-css\":2}]},{},[3]);\n"],"file":"hello.js","sourceRoot":"/source/"}